#ifndef REQUEST_API_READER_H
#define REQUEST_API_READER_H

/* Generated by flatcc 0.6.1-dev FlatBuffers schema compiler for C by dvide.com */

#ifndef FLATBUFFERS_COMMON_READER_H
#include "flatbuffers_common_reader.h"
#endif
#ifndef REQUEST_CONTRACT_READER_H
#include "request_contract_reader.h"
#endif
#ifndef REGISTER_READER_H
#include "register_reader.h"
#endif
#ifndef LOGIN_READER_H
#include "login_reader.h"
#endif
#ifndef LIST_CONTRACTS_READER_H
#include "list_contracts_reader.h"
#endif
#ifndef GET_ME_READER_H
#include "get_me_reader.h"
#endif
#ifndef EDIT_ME_READER_H
#include "edit_me_reader.h"
#endif
#ifndef CHECK_CONTRACT_READER_H
#include "check_contract_reader.h"
#endif
#include "flatcc/flatcc_flatbuffers.h"
#ifndef __alignas_is_defined
#include <stdalign.h>
#endif
#include "flatcc/flatcc_prologue.h"
#ifndef flatbuffers_identifier
#define flatbuffers_identifier 0
#endif
#ifndef flatbuffers_extension
#define flatbuffers_extension ".bin"
#endif


typedef const struct TomTomBackend_Request_Message_table *TomTomBackend_Request_Message_table_t;
typedef struct TomTomBackend_Request_Message_table *TomTomBackend_Request_Message_mutable_table_t;
typedef const flatbuffers_uoffset_t *TomTomBackend_Request_Message_vec_t;
typedef flatbuffers_uoffset_t *TomTomBackend_Request_Message_mutable_vec_t;
#ifndef TomTomBackend_Request_Message_identifier
#define TomTomBackend_Request_Message_identifier flatbuffers_identifier
#endif
#define TomTomBackend_Request_Message_type_hash ((flatbuffers_thash_t)0xdeeb4dc1)
#define TomTomBackend_Request_Message_type_identifier "\xc1\x4d\xeb\xde"


typedef uint8_t TomTomBackend_Request_MessageType_union_type_t;
__flatbuffers_define_integer_type(TomTomBackend_Request_MessageType, TomTomBackend_Request_MessageType_union_type_t, 8)
__flatbuffers_define_union(flatbuffers_, TomTomBackend_Request_MessageType)
#define TomTomBackend_Request_MessageType_NONE ((TomTomBackend_Request_MessageType_union_type_t)UINT8_C(0))
#define TomTomBackend_Request_MessageType_Login ((TomTomBackend_Request_MessageType_union_type_t)UINT8_C(1))
#define TomTomBackend_Request_MessageType_Register ((TomTomBackend_Request_MessageType_union_type_t)UINT8_C(2))
#define TomTomBackend_Request_MessageType_GetMe ((TomTomBackend_Request_MessageType_union_type_t)UINT8_C(3))
#define TomTomBackend_Request_MessageType_EditMe ((TomTomBackend_Request_MessageType_union_type_t)UINT8_C(4))
#define TomTomBackend_Request_MessageType_RequestContract ((TomTomBackend_Request_MessageType_union_type_t)UINT8_C(5))
#define TomTomBackend_Request_MessageType_ListContracts ((TomTomBackend_Request_MessageType_union_type_t)UINT8_C(6))
#define TomTomBackend_Request_MessageType_CheckContract ((TomTomBackend_Request_MessageType_union_type_t)UINT8_C(7))

static inline const char *TomTomBackend_Request_MessageType_type_name(TomTomBackend_Request_MessageType_union_type_t type)
{
    switch (type) {
    case TomTomBackend_Request_MessageType_NONE: return "NONE";
    case TomTomBackend_Request_MessageType_Login: return "Login";
    case TomTomBackend_Request_MessageType_Register: return "Register";
    case TomTomBackend_Request_MessageType_GetMe: return "GetMe";
    case TomTomBackend_Request_MessageType_EditMe: return "EditMe";
    case TomTomBackend_Request_MessageType_RequestContract: return "RequestContract";
    case TomTomBackend_Request_MessageType_ListContracts: return "ListContracts";
    case TomTomBackend_Request_MessageType_CheckContract: return "CheckContract";
    default: return "";
    }
}

static inline int TomTomBackend_Request_MessageType_is_known_type(TomTomBackend_Request_MessageType_union_type_t type)
{
    switch (type) {
    case TomTomBackend_Request_MessageType_NONE: return 1;
    case TomTomBackend_Request_MessageType_Login: return 1;
    case TomTomBackend_Request_MessageType_Register: return 1;
    case TomTomBackend_Request_MessageType_GetMe: return 1;
    case TomTomBackend_Request_MessageType_EditMe: return 1;
    case TomTomBackend_Request_MessageType_RequestContract: return 1;
    case TomTomBackend_Request_MessageType_ListContracts: return 1;
    case TomTomBackend_Request_MessageType_CheckContract: return 1;
    default: return 0;
    }
}


struct TomTomBackend_Request_Message_table { uint8_t unused__; };

static inline size_t TomTomBackend_Request_Message_vec_len(TomTomBackend_Request_Message_vec_t vec)
__flatbuffers_vec_len(vec)
static inline TomTomBackend_Request_Message_table_t TomTomBackend_Request_Message_vec_at(TomTomBackend_Request_Message_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(TomTomBackend_Request_Message_table_t, vec, i, 0)
__flatbuffers_table_as_root(TomTomBackend_Request_Message)

__flatbuffers_define_union_field(flatbuffers_, 1, TomTomBackend_Request_Message, msg, TomTomBackend_Request_MessageType, 1)


#include "flatcc/flatcc_epilogue.h"
#endif /* REQUEST_API_READER_H */
