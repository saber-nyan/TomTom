#ifndef RESPONSE_API_BUILDER_H
#define RESPONSE_API_BUILDER_H

/* Generated by flatcc 0.6.1-dev FlatBuffers schema compiler for C by dvide.com */

#ifndef RESPONSE_API_READER_H
#include "response_api_reader.h"
#endif
#ifndef FLATBUFFERS_COMMON_BUILDER_H
#include "flatbuffers_common_builder.h"
#endif
#ifndef R_REQUEST_CONTRACT_BUILDER_H
#include "r_request_contract_builder.h"
#endif
#ifndef R_REGISTER_BUILDER_H
#include "r_register_builder.h"
#endif
#ifndef R_LOGIN_BUILDER_H
#include "r_login_builder.h"
#endif
#ifndef R_LIST_CONTRACTS_BUILDER_H
#include "r_list_contracts_builder.h"
#endif
#ifndef R_GET_ME_BUILDER_H
#include "r_get_me_builder.h"
#endif
#ifndef R_EDIT_ME_BUILDER_H
#include "r_edit_me_builder.h"
#endif
#ifndef R_CHECK_CONTRACT_BUILDER_H
#include "r_check_contract_builder.h"
#endif
#include "flatcc/flatcc_prologue.h"
#ifndef flatbuffers_identifier
#define flatbuffers_identifier 0
#endif
#ifndef flatbuffers_extension
#define flatbuffers_extension ".bin"
#endif

typedef flatbuffers_union_ref_t TomTomBackend_Response_MessageType_union_ref_t;
typedef flatbuffers_union_vec_ref_t TomTomBackend_Response_MessageType_union_vec_ref_t;
static TomTomBackend_Response_MessageType_union_ref_t TomTomBackend_Response_MessageType_clone(flatbuffers_builder_t *B, TomTomBackend_Response_MessageType_union_t t);

static const flatbuffers_voffset_t __TomTomBackend_Response_Message_required[] = { 0 };
typedef flatbuffers_ref_t TomTomBackend_Response_Message_ref_t;
static TomTomBackend_Response_Message_ref_t TomTomBackend_Response_Message_clone(flatbuffers_builder_t *B, TomTomBackend_Response_Message_table_t t);
__flatbuffers_build_table(flatbuffers_, TomTomBackend_Response_Message, 4)

#define __TomTomBackend_Response_Message_formal_args , TomTomBackend_Response_MessageType_union_ref_t v1, flatbuffers_bool_t v2, flatbuffers_string_ref_t v3
#define __TomTomBackend_Response_Message_call_args , v1, v2, v3
static inline TomTomBackend_Response_Message_ref_t TomTomBackend_Response_Message_create(flatbuffers_builder_t *B __TomTomBackend_Response_Message_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, TomTomBackend_Response_Message, TomTomBackend_Response_Message_identifier, TomTomBackend_Response_Message_type_identifier)

static inline TomTomBackend_Response_MessageType_union_ref_t TomTomBackend_Response_MessageType_as_NONE()
{ TomTomBackend_Response_MessageType_union_ref_t uref; uref.type = TomTomBackend_Response_MessageType_NONE; uref.value = 0; return uref; }
static inline TomTomBackend_Response_MessageType_union_ref_t TomTomBackend_Response_MessageType_as_Login(TomTomBackend_Response_Login_ref_t ref)
{ TomTomBackend_Response_MessageType_union_ref_t uref; uref.type = TomTomBackend_Response_MessageType_Login; uref.value = ref; return uref; }
static inline TomTomBackend_Response_MessageType_union_ref_t TomTomBackend_Response_MessageType_as_Register(TomTomBackend_Response_Register_ref_t ref)
{ TomTomBackend_Response_MessageType_union_ref_t uref; uref.type = TomTomBackend_Response_MessageType_Register; uref.value = ref; return uref; }
static inline TomTomBackend_Response_MessageType_union_ref_t TomTomBackend_Response_MessageType_as_GetMe(TomTomBackend_Response_GetMe_ref_t ref)
{ TomTomBackend_Response_MessageType_union_ref_t uref; uref.type = TomTomBackend_Response_MessageType_GetMe; uref.value = ref; return uref; }
static inline TomTomBackend_Response_MessageType_union_ref_t TomTomBackend_Response_MessageType_as_EditMe(TomTomBackend_Response_EditMe_ref_t ref)
{ TomTomBackend_Response_MessageType_union_ref_t uref; uref.type = TomTomBackend_Response_MessageType_EditMe; uref.value = ref; return uref; }
static inline TomTomBackend_Response_MessageType_union_ref_t TomTomBackend_Response_MessageType_as_RequestContract(TomTomBackend_Response_RequestContract_ref_t ref)
{ TomTomBackend_Response_MessageType_union_ref_t uref; uref.type = TomTomBackend_Response_MessageType_RequestContract; uref.value = ref; return uref; }
static inline TomTomBackend_Response_MessageType_union_ref_t TomTomBackend_Response_MessageType_as_ListContracts(TomTomBackend_Response_ListContracts_ref_t ref)
{ TomTomBackend_Response_MessageType_union_ref_t uref; uref.type = TomTomBackend_Response_MessageType_ListContracts; uref.value = ref; return uref; }
static inline TomTomBackend_Response_MessageType_union_ref_t TomTomBackend_Response_MessageType_as_CheckContract(TomTomBackend_Response_CheckContract_ref_t ref)
{ TomTomBackend_Response_MessageType_union_ref_t uref; uref.type = TomTomBackend_Response_MessageType_CheckContract; uref.value = ref; return uref; }
__flatbuffers_build_union_vector(flatbuffers_, TomTomBackend_Response_MessageType)

static TomTomBackend_Response_MessageType_union_ref_t TomTomBackend_Response_MessageType_clone(flatbuffers_builder_t *B, TomTomBackend_Response_MessageType_union_t u)
{
    switch (u.type) {
    case 1: return TomTomBackend_Response_MessageType_as_Login(TomTomBackend_Response_Login_clone(B, (TomTomBackend_Response_Login_table_t)u.value));
    case 2: return TomTomBackend_Response_MessageType_as_Register(TomTomBackend_Response_Register_clone(B, (TomTomBackend_Response_Register_table_t)u.value));
    case 3: return TomTomBackend_Response_MessageType_as_GetMe(TomTomBackend_Response_GetMe_clone(B, (TomTomBackend_Response_GetMe_table_t)u.value));
    case 4: return TomTomBackend_Response_MessageType_as_EditMe(TomTomBackend_Response_EditMe_clone(B, (TomTomBackend_Response_EditMe_table_t)u.value));
    case 5: return TomTomBackend_Response_MessageType_as_RequestContract(TomTomBackend_Response_RequestContract_clone(B, (TomTomBackend_Response_RequestContract_table_t)u.value));
    case 6: return TomTomBackend_Response_MessageType_as_ListContracts(TomTomBackend_Response_ListContracts_clone(B, (TomTomBackend_Response_ListContracts_table_t)u.value));
    case 7: return TomTomBackend_Response_MessageType_as_CheckContract(TomTomBackend_Response_CheckContract_clone(B, (TomTomBackend_Response_CheckContract_table_t)u.value));
    default: return TomTomBackend_Response_MessageType_as_NONE();
    }
}

__flatbuffers_build_union_field(1, flatbuffers_, TomTomBackend_Response_Message_msg, TomTomBackend_Response_MessageType, TomTomBackend_Response_Message)
__flatbuffers_build_union_table_value_field(flatbuffers_, TomTomBackend_Response_Message_msg, TomTomBackend_Response_MessageType, Login, TomTomBackend_Response_Login)
__flatbuffers_build_union_table_value_field(flatbuffers_, TomTomBackend_Response_Message_msg, TomTomBackend_Response_MessageType, Register, TomTomBackend_Response_Register)
__flatbuffers_build_union_table_value_field(flatbuffers_, TomTomBackend_Response_Message_msg, TomTomBackend_Response_MessageType, GetMe, TomTomBackend_Response_GetMe)
__flatbuffers_build_union_table_value_field(flatbuffers_, TomTomBackend_Response_Message_msg, TomTomBackend_Response_MessageType, EditMe, TomTomBackend_Response_EditMe)
__flatbuffers_build_union_table_value_field(flatbuffers_, TomTomBackend_Response_Message_msg, TomTomBackend_Response_MessageType, RequestContract, TomTomBackend_Response_RequestContract)
__flatbuffers_build_union_table_value_field(flatbuffers_, TomTomBackend_Response_Message_msg, TomTomBackend_Response_MessageType, ListContracts, TomTomBackend_Response_ListContracts)
__flatbuffers_build_union_table_value_field(flatbuffers_, TomTomBackend_Response_Message_msg, TomTomBackend_Response_MessageType, CheckContract, TomTomBackend_Response_CheckContract)
__flatbuffers_build_scalar_field(2, flatbuffers_, TomTomBackend_Response_Message_error, flatbuffers_bool, flatbuffers_bool_t, 1, 1, UINT8_C(0), TomTomBackend_Response_Message)
__flatbuffers_build_string_field(3, flatbuffers_, TomTomBackend_Response_Message_errorDescription, TomTomBackend_Response_Message)

static inline TomTomBackend_Response_Message_ref_t TomTomBackend_Response_Message_create(flatbuffers_builder_t *B __TomTomBackend_Response_Message_formal_args)
{
    if (TomTomBackend_Response_Message_start(B)
        || TomTomBackend_Response_Message_msg_add_value(B, v1)
        || TomTomBackend_Response_Message_errorDescription_add(B, v3)
        || TomTomBackend_Response_Message_error_add(B, v2)
        || TomTomBackend_Response_Message_msg_add_type(B, v1.type)) {
        return 0;
    }
    return TomTomBackend_Response_Message_end(B);
}

static TomTomBackend_Response_Message_ref_t TomTomBackend_Response_Message_clone(flatbuffers_builder_t *B, TomTomBackend_Response_Message_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (TomTomBackend_Response_Message_start(B)
        || TomTomBackend_Response_Message_msg_pick(B, t)
        || TomTomBackend_Response_Message_errorDescription_pick(B, t)
        || TomTomBackend_Response_Message_error_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, TomTomBackend_Response_Message_end(B));
}

#include "flatcc/flatcc_epilogue.h"
#endif /* RESPONSE_API_BUILDER_H */
