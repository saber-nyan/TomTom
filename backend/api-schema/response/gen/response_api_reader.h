#ifndef RESPONSE_API_READER_H
#define RESPONSE_API_READER_H

/* Generated by flatcc 0.6.1-dev FlatBuffers schema compiler for C by dvide.com */

#ifndef FLATBUFFERS_COMMON_READER_H
#include "flatbuffers_common_reader.h"
#endif
#ifndef R_REQUEST_CONTRACT_READER_H
#include "r_request_contract_reader.h"
#endif
#ifndef R_REGISTER_READER_H
#include "r_register_reader.h"
#endif
#ifndef R_LOGIN_READER_H
#include "r_login_reader.h"
#endif
#ifndef R_LIST_CONTRACTS_READER_H
#include "r_list_contracts_reader.h"
#endif
#ifndef R_GET_ME_READER_H
#include "r_get_me_reader.h"
#endif
#ifndef R_EDIT_ME_READER_H
#include "r_edit_me_reader.h"
#endif
#ifndef R_CHECK_CONTRACT_READER_H
#include "r_check_contract_reader.h"
#endif
#include "flatcc/flatcc_flatbuffers.h"
#ifndef __alignas_is_defined
#include <stdalign.h>
#endif
#include "flatcc/flatcc_prologue.h"
#ifndef flatbuffers_identifier
#define flatbuffers_identifier 0
#endif
#ifndef flatbuffers_extension
#define flatbuffers_extension ".bin"
#endif


typedef const struct TomTomBackend_Response_Message_table *TomTomBackend_Response_Message_table_t;
typedef struct TomTomBackend_Response_Message_table *TomTomBackend_Response_Message_mutable_table_t;
typedef const flatbuffers_uoffset_t *TomTomBackend_Response_Message_vec_t;
typedef flatbuffers_uoffset_t *TomTomBackend_Response_Message_mutable_vec_t;
#ifndef TomTomBackend_Response_Message_identifier
#define TomTomBackend_Response_Message_identifier flatbuffers_identifier
#endif
#define TomTomBackend_Response_Message_type_hash ((flatbuffers_thash_t)0xd3fe0735)
#define TomTomBackend_Response_Message_type_identifier "\x35\x07\xfe\xd3"


typedef uint8_t TomTomBackend_Response_MessageType_union_type_t;
__flatbuffers_define_integer_type(TomTomBackend_Response_MessageType, TomTomBackend_Response_MessageType_union_type_t, 8)
__flatbuffers_define_union(flatbuffers_, TomTomBackend_Response_MessageType)
#define TomTomBackend_Response_MessageType_NONE ((TomTomBackend_Response_MessageType_union_type_t)UINT8_C(0))
#define TomTomBackend_Response_MessageType_Login ((TomTomBackend_Response_MessageType_union_type_t)UINT8_C(1))
#define TomTomBackend_Response_MessageType_Register ((TomTomBackend_Response_MessageType_union_type_t)UINT8_C(2))
#define TomTomBackend_Response_MessageType_GetMe ((TomTomBackend_Response_MessageType_union_type_t)UINT8_C(3))
#define TomTomBackend_Response_MessageType_EditMe ((TomTomBackend_Response_MessageType_union_type_t)UINT8_C(4))
#define TomTomBackend_Response_MessageType_RequestContract ((TomTomBackend_Response_MessageType_union_type_t)UINT8_C(5))
#define TomTomBackend_Response_MessageType_ListContracts ((TomTomBackend_Response_MessageType_union_type_t)UINT8_C(6))
#define TomTomBackend_Response_MessageType_CheckContract ((TomTomBackend_Response_MessageType_union_type_t)UINT8_C(7))

static inline const char *TomTomBackend_Response_MessageType_type_name(TomTomBackend_Response_MessageType_union_type_t type)
{
    switch (type) {
    case TomTomBackend_Response_MessageType_NONE: return "NONE";
    case TomTomBackend_Response_MessageType_Login: return "Login";
    case TomTomBackend_Response_MessageType_Register: return "Register";
    case TomTomBackend_Response_MessageType_GetMe: return "GetMe";
    case TomTomBackend_Response_MessageType_EditMe: return "EditMe";
    case TomTomBackend_Response_MessageType_RequestContract: return "RequestContract";
    case TomTomBackend_Response_MessageType_ListContracts: return "ListContracts";
    case TomTomBackend_Response_MessageType_CheckContract: return "CheckContract";
    default: return "";
    }
}

static inline int TomTomBackend_Response_MessageType_is_known_type(TomTomBackend_Response_MessageType_union_type_t type)
{
    switch (type) {
    case TomTomBackend_Response_MessageType_NONE: return 1;
    case TomTomBackend_Response_MessageType_Login: return 1;
    case TomTomBackend_Response_MessageType_Register: return 1;
    case TomTomBackend_Response_MessageType_GetMe: return 1;
    case TomTomBackend_Response_MessageType_EditMe: return 1;
    case TomTomBackend_Response_MessageType_RequestContract: return 1;
    case TomTomBackend_Response_MessageType_ListContracts: return 1;
    case TomTomBackend_Response_MessageType_CheckContract: return 1;
    default: return 0;
    }
}


struct TomTomBackend_Response_Message_table { uint8_t unused__; };

static inline size_t TomTomBackend_Response_Message_vec_len(TomTomBackend_Response_Message_vec_t vec)
__flatbuffers_vec_len(vec)
static inline TomTomBackend_Response_Message_table_t TomTomBackend_Response_Message_vec_at(TomTomBackend_Response_Message_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(TomTomBackend_Response_Message_table_t, vec, i, 0)
__flatbuffers_table_as_root(TomTomBackend_Response_Message)

__flatbuffers_define_union_field(flatbuffers_, 1, TomTomBackend_Response_Message, msg, TomTomBackend_Response_MessageType, 0)
__flatbuffers_define_scalar_field(2, TomTomBackend_Response_Message, error, flatbuffers_bool, flatbuffers_bool_t, UINT8_C(0))
__flatbuffers_define_string_field(3, TomTomBackend_Response_Message, errorDescription, 0)


#include "flatcc/flatcc_epilogue.h"
#endif /* RESPONSE_API_READER_H */
