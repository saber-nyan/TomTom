// automatically generated by the FlatBuffers compiler, do not modify

package online.mctf.tomtom.api.models.Response;

import androidx.annotation.Nullable;

import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.Table;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class CheckContract extends Table {
	public static CheckContract getRootAsCheckContract(ByteBuffer _bb) {
		return getRootAsCheckContract(_bb, new CheckContract());
	}

	public static CheckContract getRootAsCheckContract(ByteBuffer _bb, CheckContract obj) {
		_bb.order(ByteOrder.LITTLE_ENDIAN);
		return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb));
	}

	public static int createCheckContract(FlatBufferBuilder builder,
										  long id,
										  int nameOffset,
										  int descriptionOffset,
										  double price,
										  int attachmentOffset,
										  int status,
										  long created_at,
										  int by_userOffset) {
		builder.startObject(8);
		CheckContract.addCreatedAt(builder, created_at);
		CheckContract.addPrice(builder, price);
		CheckContract.addId(builder, id);
		CheckContract.addByUser(builder, by_userOffset);
		CheckContract.addAttachment(builder, attachmentOffset);
		CheckContract.addDescription(builder, descriptionOffset);
		CheckContract.addName(builder, nameOffset);
		CheckContract.addStatus(builder, status);
		return CheckContract.endCheckContract(builder);
	}

	public static void startCheckContract(FlatBufferBuilder builder) {
		builder.startObject(8);
	}

	public static void addId(FlatBufferBuilder builder, long id) {
		builder.addLong(0, id, -1L);
	}

	public static void addName(FlatBufferBuilder builder, int nameOffset) {
		builder.addOffset(1, nameOffset, 0);
	}

	public static void addDescription(FlatBufferBuilder builder, int descriptionOffset) {
		builder.addOffset(2, descriptionOffset, 0);
	}

	public static void addPrice(FlatBufferBuilder builder, double price) {
		builder.addDouble(3, price, -1.0);
	}

	public static void addAttachment(FlatBufferBuilder builder, int attachmentOffset) {
		builder.addOffset(4, attachmentOffset, 0);
	}

	public static int createAttachmentVector(FlatBufferBuilder builder, byte[] data) {
		builder.startVector(1, data.length, 1);
		for (int i = data.length - 1; i >= 0; i--) builder.addByte(data[i]);
		return builder.endVector();
	}

	public static void startAttachmentVector(FlatBufferBuilder builder, int numElems) {
		builder.startVector(1, numElems, 1);
	}

	public static void addStatus(FlatBufferBuilder builder, int status) {
		builder.addByte(5, (byte) status, (byte) 1);
	}

	public static void addCreatedAt(FlatBufferBuilder builder, long createdAt) {
		builder.addLong(6, createdAt, 0L);
	}

	public static void addByUser(FlatBufferBuilder builder, int byUserOffset) {
		builder.addOffset(7, byUserOffset, 0);
	}

	public static int endCheckContract(FlatBufferBuilder builder) {
		int o = builder.endObject();
		builder.required(o, 6);  // name
		builder.required(o, 18);  // by_user
		return o;
	}

	public void __init(int _i, ByteBuffer _bb) {
		bb_pos = _i;
		bb = _bb;
		vtable_start = bb_pos - bb.getInt(bb_pos);
		vtable_size = bb.getShort(vtable_start);
	}

	public CheckContract __assign(int _i, ByteBuffer _bb) {
		__init(_i, _bb);
		return this;
	}

	public long id() {
		int o = __offset(4);
		return o != 0 ? bb.getLong(o + bb_pos) : -1L;
	}

	public String name() {
		int o = __offset(6);
		return o != 0 ? __string(o + bb_pos) : null;
	}

	public ByteBuffer nameAsByteBuffer() {
		return __vector_as_bytebuffer(6, 1);
	}

	public ByteBuffer nameInByteBuffer(ByteBuffer _bb) {
		return __vector_in_bytebuffer(_bb, 6, 1);
	}

	public @Nullable
	String description() {
		int o = __offset(8);
		return o != 0 ? __string(o + bb_pos) : null;
	}

	public ByteBuffer descriptionAsByteBuffer() {
		return __vector_as_bytebuffer(8, 1);
	}

	public ByteBuffer descriptionInByteBuffer(ByteBuffer _bb) {
		return __vector_in_bytebuffer(_bb, 8, 1);
	}

	public double price() {
		int o = __offset(10);
		return o != 0 ? bb.getDouble(o + bb_pos) : -1.0;
	}

	public int attachment(int j) {
		int o = __offset(12);
		return o != 0 ? bb.get(__vector(o) + j * 1) & 0xFF : 0;
	}

	public int attachmentLength() {
		int o = __offset(12);
		return o != 0 ? __vector_len(o) : 0;
	}

	public ByteBuffer attachmentAsByteBuffer() {
		return __vector_as_bytebuffer(12, 1);
	}

	public ByteBuffer attachmentInByteBuffer(ByteBuffer _bb) {
		return __vector_in_bytebuffer(_bb, 12, 1);
	}

	public int status() {
		int o = __offset(14);
		return o != 0 ? bb.get(o + bb_pos) & 0xFF : 1;
	}

	public long createdAt() {
		int o = __offset(16);
		return o != 0 ? bb.getLong(o + bb_pos) : 0L;
	}

	public User byUser() {
		return byUser(new User());
	}

	public User byUser(User obj) {
		int o = __offset(18);
		return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null;
	}
}

